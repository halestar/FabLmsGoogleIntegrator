<?php
return
[
	'name' => 'Google Integrator',
	'description' => 'This integrator integrates Google Services into FabLMS.  It includes integrations to authenticate users, allow users to access their documents, provide system storage and get access to AI',
	'services.auth' => 'Google Authentication',
	'services.auth.description' => 'This service will authenticate users against Google using oAuth2',
	'services.auth.settings' => 'Google Authentication Settings',
	'services.auth.system.settings' => 'Google System Authentication Settings',
	'services.auth.use_avatar' => 'Use Google Avatar instead of FabLMS Avatar',
	'services.auth.use_avatar.description' => 'If this is enabled, users will use their Google avatar instead of the FabLMS avatar.',
	'services.auth.autoconnect' => 'Auto-Connect to the following google services',
	'services.documents' => 'Google Documents',
	'services.documents.description' => 'This service will allow users to access their documents from Google Drive.',
	'services.work' => 'Google Storage',
	'services.work.description' => 'This service will allow the system to store all its files in a Google Drive Account.',
	'services.work.settings' => 'Google Work Storage Settings',
	
	'services.work.service_account' => 'Service Email',
	'services.work.service_account.description' => 'This is the email address of the account where the system files will be stored.',
	'services.work.connected' => 'This service is connected to the system',
	'services.work.disconnected' => 'This service is not connected to the system',
	'services.work.root' => 'Root Folder',
	'services.work.root.description' => 'This is the root folder where the system files will be stored.',
	'services.work.root.select' => 'Select Root Folder',
	
	'services.ai' => 'Google Gemini',
	'services.ai.system.settings' => 'Google Gemini System Settings',
	'services.ai.description' => 'This service will allow the system to use Google Gemini to generate structured content.',
	'oauth' => 'Google OAuth2.0 Settings',
	
	'services.ai.system.gemini_api' => 'Gemini API key',
	'services.ai.system.gemini_api.description' => 'This is the API key that you get from the Google Developer Console.',
	'service' => 'Google Service Account Settings',
	'service.description' => 'These settings will allow the system to integrate with Google services.',
	'oauth.description' => 'These settings will allow users in the system to connect to the google service using OAuth2.0.',
	'client_id' => 'Client ID',
	'client_id.description' => 'This is the client ID that you get from the Google Developer Console.',
	'client_secret' => 'Client Secret',
	'client_secret.description' => 'This is the client secret that you get from the Google Developer Console.',
	'redirect' => 'Redirect URL',
	'redirect.description' => 'This is the redirect URL provided by the system. Make sure you enter this as an endpoint the Google Cloud console.',
	'update.success' => 'The Google Integrator Settings have been updated.',
	'auth.update.success' => 'The Google Authentication Integration Settings have been updated.',
	'work.update.success' => 'The Google System Storage Settings have been updated.',
	'service.file' => 'Upload the service account secrets file',
	'service.file.description' => 'This is the file that is downloaded when you create the service account key.',
	'services.ai.allow_user_system_ai' => 'Allow users to use the system AI',
	'services.ai.allow_user_system_ai.description' => 'This option allows all users to use the system AI.',
	'ai.update.success' => 'The Google AI Settings have been updated.',
	
	'services.ai.allow_user_ai' => 'Allow users to use AI',
	'services.ai.allow_user_ai.description' => 'This option allows all users to use the AI system where it is available. Without it, the user will need a special permission to use the system ai.',
	
	'services.ai.allow_user_own_ai' => 'Allow users to use their own AI',
	'services.ai.allow_user_own_ai.description' => 'This option allows a user to configure and use their own AI.',
	'services.ai.registration.success' => 'The Google AI Integration has been registered.',
	'services.ai.registration.error' => 'There was an error registering the Google AI Integration.',


];